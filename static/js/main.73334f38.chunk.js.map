{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["App","useState","data","setData","useEffect","fetch","then","res","json","results","map","character","className","style","width","Card","Img","variant","src","image","Body","Title","name","Text","species","Button","href","url","target","id","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"0QAmCeA,MA/Bf,WAAgB,IAAD,EACWC,mBAAS,IADpB,mBACNC,EADM,KACAC,EADA,KASb,OANEC,qBAAU,WACRC,MAAM,8CACLC,MAAK,SAACC,GAAD,OAASA,EAAIC,UAClBF,MAAK,SAACJ,GAAD,OAAUC,EAAQD,EAAKO,cAC9B,IAGD,gCACE,qEAICP,EAAKQ,KAAI,SAACC,GAAD,OACR,uBAAMC,UAAU,MAAyBC,MAAO,CAAEC,MAAO,SAAzD,UACE,cAACC,EAAA,EAAKC,IAAN,CAAUC,QAAQ,MAAMC,IAAKP,EAAUQ,QACvC,eAACJ,EAAA,EAAKK,KAAN,WACE,cAACL,EAAA,EAAKM,MAAN,UAAaV,EAAUW,OACvB,cAACP,EAAA,EAAKQ,KAAN,UAAYZ,EAAUa,UACtB,cAACC,EAAA,EAAD,CAAQR,QAAQ,UAAUS,KAAMf,EAAUgB,IAAKC,OAAO,SAAtD,4BALuBjB,EAAUkB,WCR9BC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqB1B,MAAK,YAAkD,IAA/C2B,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCAdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.73334f38.chunk.js","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { Card, Button } from 'react-bootstrap';\nimport './App.css';\n\nfunction App() {\n  const [data, setData] = useState([]);\n\n    useEffect(() => {\n      fetch(\"https://rickandmortyapi.com/api/character/\")\n      .then((res) => res.json())\n      .then((data) => setData(data.results));\n  }, []);\n\n  return (\n    <div>\n      <h2>Welcome To Susi React Bootstrap App</h2>\n      {/*<h3>Its an application that use an API to fetch images with their\n         info, and display them using react bootstrap. Its also use\n      react hooks for state management</h3>*/}\n      {data.map((character) => (\n        <card className=\"img\" key={character.id} style={{ width: \"15rem\"}}>\n          <Card.Img variant=\"top\" src={character.image} />\n          <Card.Body>\n            <Card.Title>{character.name}</Card.Title>\n            <Card.Text>{character.species}</Card.Text>\n            <Button variant=\"primary\" href={character.url} target=\"_blank\">\n              More Info\n            </Button>\n          </Card.Body>\n        </card>\n      ))}\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}